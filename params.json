{"name":"Seccoco","tagline":"easy encryption","body":"# What is Seccoco?\r\nSeccoco is an Android library which offers you to add encryption to your application with just a few lines of code. Seccoco is designed with simplicity in mind. Instead of giving you gazillions of different configurations it provides you sensible defaults and abstracts away the complexity of cryptography. Under the hood it uses state of the art crypto algorithms.\r\n# How to use Seccoco?\r\n## Initialize\r\n Create Seccoco directly in your Android Application class and make this object available to other parts of your application e.g. via dependency injection.\r\n\r\n    Seccoco seccoco =  SeccocoFactory.create(this);\r\n\r\nInternally Seccoco will at first launch of the application create a keypair and store the private key securily. It then creates a random passphrase and stores this encrypted with the public key. On subsequent starts of the application it will then access the private key and decrypt the passphrase.\r\n\r\n## Symmetric encryption\r\nYou don't need to provide a passphrase or IV. Seccoco internally uses the auto generated passphrase with an IV for it.\r\n\r\n    byte[] encrypted = seccoco.crypto().encrypt(\"Hello from Seccoco\".getBytes());\r\n    byte[] decrypted = seccoco.crypto().decrypt(encrypted);\r\n\r\n##Hybrid encryption\r\n\r\n###Encryption\r\nIf you want to encrypt data for somebody else, you just need to have the certificate and pass this along the plaintext data.\r\n\r\n    String certificate = \"--------BEGIN CERTIFICATE----- (truncated) -----END CERTIFICATE-----\";\r\n    Identity identity = new Identity(certificate);\r\n    byte[] plainText =  \"Hello from Seccoco\".getBytes()\r\n    EncryptedMessage encryptedMessage = seccoco.crypto().encrypt(plainText,identity);\r\n\r\nThe EncryptedMessage will automatically have your certificate attached and also a signature of the content, so that the recipient of this message can validate if you are the one who sent this message.\r\n\r\n\r\n###Decryption\r\n\r\nIf you received an EncryptedMessage you can decrypt it again without the need of additional parameters.\r\n    \r\n    byte[] decrypted = seccoco.crypto().decrypt(encrypted,encryptedMessage);","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}